<Window
    x:Class="OsuHelper.Views.RootView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:OsuHelper.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:viewModels="clr-namespace:OsuHelper.ViewModels"
    Width="850"
    Height="625"
    d:DataContext="{d:DesignInstance Type=viewModels:RootViewModel}"
    Background="{DynamicResource MaterialDesignPaper}"
    Icon="/osu!helper;component/favicon.ico"
    Style="{DynamicResource MaterialDesignRoot}"
    WindowStartupLocation="CenterScreen"
    mc:Ignorable="d">
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo ProgressState="Normal" ProgressValue="{Binding ProgressManager.Progress}" />
    </Window.TaskbarItemInfo>
    <materialDesign:DialogHost
        CloseOnClickAway="True"
        SnackbarMessageQueue="{Binding Notifications}"
        Style="{DynamicResource MaterialDesignEmbeddedDialogHost}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <!--  Toolbar  -->
            <Grid
                Grid.Row="0"
                Background="{DynamicResource PrimaryHueMidBrush}"
                TextElement.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <!--  Filters  -->
                <StackPanel
                    Grid.Column="0"
                    Margin="5"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Visibility="{Binding Recommendations, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                    <TextBlock
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Text="Filters:" />

                    <CheckBox
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Content="Nomod"
                        Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                        IsChecked="{Binding IsNomodFilterEnabled}"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}" />
                    <CheckBox
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Content="HD"
                        Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                        IsChecked="{Binding IsHiddenFilterEnabled}"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}" />
                    <CheckBox
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Content="HR"
                        Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                        IsChecked="{Binding IsHardRockFilterEnabled}"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}" />
                    <CheckBox
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Content="DT"
                        Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                        IsChecked="{Binding IsDoubleTimeFilterEnabled}"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}" />
                    <CheckBox
                        Margin="4,0,0,0"
                        VerticalAlignment="Center"
                        Content="Other"
                        Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                        IsChecked="{Binding IsOtherFilterEnabled}"
                        Style="{DynamicResource MaterialDesignUserForegroundCheckBox}" />
                </StackPanel>

                <!--  Buttons  -->
                <StackPanel
                    Grid.Column="1"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">
                    <Button
                        Margin="4,8,0,8"
                        Padding="4"
                        VerticalAlignment="Center"
                        Command="{s:Action ShowAbout}"
                        Style="{DynamicResource MaterialDesignFlatDarkButton}"
                        ToolTip="About osu!helper">
                        <materialDesign:PackIcon
                            Width="24"
                            Height="24"
                            Kind="InformationOutline" />
                    </Button>
                    <Button
                        Margin="4,8,0,8"
                        Padding="4"
                        VerticalAlignment="Center"
                        Command="{s:Action ShowSettings}"
                        Style="{DynamicResource MaterialDesignFlatDarkButton}"
                        ToolTip="Settings">
                        <materialDesign:PackIcon
                            Width="24"
                            Height="24"
                            Kind="Settings" />
                    </Button>
                    <Button
                        Margin="4,8,8,8"
                        VerticalAlignment="Center"
                        Command="{s:Action PopulateRecommendations}"
                        Style="{DynamicResource MaterialDesignRaisedAccentButton}"
                        ToolTip="Update recommendations">
                        <StackPanel Orientation="Horizontal">
                            <materialDesign:PackIcon
                                Width="24"
                                Height="24"
                                Kind="Sync" />
                            <TextBlock
                                Margin="4,0,0,0"
                                VerticalAlignment="Center"
                                Text="UPDATE" />
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>

            <!--  Progress bar  -->
            <ProgressBar
                Grid.Row="1"
                Background="{DynamicResource PrimaryHueMidBrush}"
                Value="{Binding ProgressManager.Progress, Mode=OneWay}" />

            <!--  Content  -->
            <Grid Grid.Row="2">
                <!--  Placeholder  -->
                <TextBlock
                    Margin="8,0,8,32"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    FontSize="18"
                    TextWrapping="WrapWithOverflow"
                    Visibility="{Binding Recommendations, Converter={x:Static s:BoolToVisibilityConverter.InverseInstance}}">
                    <Run Text="Press the" />
                    <Run FontWeight="SemiBold" Text="Update" />
                    <Run Text="button to analyze your plays and generate recommendations" />
                </TextBlock>

                <!--  Recommendations  -->
                <DataGrid
                    Background="{DynamicResource MaterialDesignCardBackground}"
                    HorizontalScrollBarVisibility="Disabled"
                    ItemsSource="{Binding Recommendations}"
                    MouseLeftButtonUp="{s:Action ShowBeatmapDetails}"
                    SelectedItem="{Binding SelectedRecommendation}"
                    VerticalScrollBarVisibility="Auto"
                    Visibility="{Binding Recommendations, Converter={x:Static s:BoolToVisibilityConverter.Instance}}">
                    <!--  Hand cursor on cells  -->
                    <DataGrid.RowStyle>
                        <Style BasedOn="{StaticResource {x:Type DataGridRow}}" TargetType="{x:Type DataGridRow}">
                            <Setter Property="Cursor" Value="Hand" />
                        </Style>
                    </DataGrid.RowStyle>

                    <!--  Columns  -->
                    <DataGrid.Columns>
                        <DataGridTextColumn
                            Width="*"
                            Binding="{Binding Beatmap.FullName}"
                            Header="Name" />

                        <DataGridTextColumn Binding="{Binding Mods, Converter={x:Static converters:ModsToStringConverter.Instance}}" Header="Mods" />

                        <DataGridTextColumn Binding="{Binding TraitsWithMods.StarRating, StringFormat=\{0:0.#\}}" Header="SR">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsStarRatingAffected}" Value="True">
                                            <Setter Property="FontWeight" Value="SemiBold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding TraitsWithMods.ApproachRate, StringFormat=\{0:0.#\}}" Header="AR">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsApproachRateAffected}" Value="True">
                                            <Setter Property="FontWeight" Value="SemiBold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding TraitsWithMods.OverallDifficulty, StringFormat=\{0:0.#\}}" Header="OD">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsOverallDifficultyAffected}" Value="True">
                                            <Setter Property="FontWeight" Value="SemiBold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding TraitsWithMods.Tempo, StringFormat=\{0:N0\}}" Header="BPM">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsTempoAffected}" Value="True">
                                            <Setter Property="FontWeight" Value="SemiBold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding TraitsWithMods.Duration, Converter={x:Static converters:TimeSpanToShortStringConverter.Instance}}" Header="Length">
                            <DataGridTextColumn.CellStyle>
                                <Style BasedOn="{StaticResource {x:Type DataGridCell}}" TargetType="{x:Type DataGridCell}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsDurationAffected}" Value="True">
                                            <Setter Property="FontWeight" Value="SemiBold" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                        </DataGridTextColumn>

                        <DataGridTextColumn Binding="{Binding ExpectedAccuracy, StringFormat=\{0:P2\}}" Header="Accuracy" />

                        <DataGridTextColumn Binding="{Binding ExpectedPerformancePoints, StringFormat=\{0:N0\} pp}" Header="Gain" />

                        <DataGridTextColumn Binding="{Binding Weight}" Header="Weight" />
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>

            <!--  Snackbar  -->
            <materialDesign:Snackbar Grid.Row="2" MessageQueue="{Binding Notifications}" />
        </Grid>
    </materialDesign:DialogHost>
</Window>